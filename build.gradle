buildscript {
    apply from: 'dependencies.gradle'
}

/*
=========================================================
  Apply Plugins
=========================================================
 */
apply plugin: 'java'
apply plugin: 'maven-publish'

/*
=========================================================
   Repo Info
=========================================================
 */

group = 'com.vite'
description = 'Vite Server API'

sourceCompatibility = 1.17
targetCompatibility = 1.17

/*
=========================================================
  Create self contained jar
=========================================================
*/

def artifactName = 'vite-server-api'

jar {
    archiveBaseName = artifactName
    manifest {
        attributes(
                "Implementation-Title": archiveBaseName,
                "Implementation-Version": archiveVersion,
        )
    }
    into("META-INF/maven/$project.group/$archiveBaseName") {
        from "$buildDir/tmp/maven/"
    }
}

/*
=========================================================
   Generate Java Api
=========================================================
 */
task generateJava(type:Exec) {
    def srcDir = "src/main/thrift"
    println "$project.projectDir"
    def targetDir = new File("$project.projectDir/src/main/java")
    targetDir.mkdirs()

    project.file(srcDir).listFiles(new FilenameFilter() {
        @Override
        public boolean accept(File dir, String name) {
            return name.matches(".*\\.(thrift)");
        }
    }).each { file ->
        commandLine "thrift", "--gen","java","--out", targetDir.absolutePath,  file.absolutePath
    }
}

/*
=========================================================
    Javadocs Generation
=========================================================
*/
task docs(type: Javadoc) {
    source = sourceSets.main.java
    destinationDir = file("$project.buildDir/javadocs")
    failOnError = true
}

task makeJavadoc(type: Jar) {
    archiveBaseName = artifactName
    archiveVersion = project.version
    archiveExtension = "jar"
    classifier = "javadoc"
    destinationDirectory = file("$buildDir/libs/")
    from(files(project.files("$buildDir/javadocs"), file("$buildDir/tmp/maven/")))
}
makeJavadoc.dependsOn docs

task makeDocumentation(type: Tar) {
    archiveBaseName = artifactName
    archiveVersion = project.version
    archiveExtension = "tar.gz"
    compression = Compression.GZIP
    classifier = "javadoc"
    destinationDirectory = file("$buildDir/")
    from(project.files("$buildDir/javadocs"))
}
makeDocumentation.dependsOn docs

/*
=========================================================
    Source code tar Generation
=========================================================
*/
task makeSource(type: Jar) {
    archiveBaseName = artifactName
    archiveVersion = project.version
    archiveExtension = "jar"
    classifier = "src"
    destinationDirectory = file("$buildDir/libs/")
    from(project.files("src"), project.file("README*"), project.file("$buildDir/tmp/maven/pom.xml"))
}
compileJava.dependsOn makeSource
compileJava.dependsOn generateJava

/*
=========================================================
  Publishing
=========================================================
*/
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = artifactName
            version = project.version

            from components.java
        }
    }
}

/*
=========================================================
   Gather Dependencies
=========================================================
 */

repositories {
    mavenCentral()
}

dependencies {
    implementation libraries.thrift
}
